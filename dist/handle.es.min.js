import merge from"merge";let getOp=(t,e,r,s)=>("string"==typeof t&&(t=[t]),Array.isArray(t)?{where:t.reduce((t,r)=>("string"==typeof r?t[r]=e[r]:Array.isArray(r)&&(t[r[0]]=/^@/.test(r[1])?e[r[1].slice(1)]:r[1]),t),{})}:"function"==typeof t?t(e,r,s):t||{}),getRequestData=(t,e)=>"get"===t?e.query:"post"===t?e.request.body:{},mixinScope=(t,e,r,s)=>{let n=r.concat(s);if(!n.length)return e;let o=n.map(e=>{let r="function"==typeof e?e(t):e;return"function"==typeof r&&(r=e()(t)),r});return merge.recursive(!0,e,...o)},initialCap=t=>t[0].toUpperCase()+t.substring(1),proxyNames={get:["findOne","findAll","findById","findOrCreate","findAndCountAll","findAndCount","findCreateFind","count","max","min","sun"],post:["create","bulkCreate","update","destroy","increment","decrement"]};class Include{constructor(){this.__maps={}}add(t,e){const r=this.__maps;let s;return"function"!=typeof e&&(s=(()=>e)),r[t]=s.bind(r),this}remove(t){return delete this.__maps[t]}get(t){return this.__maps[t]}create(...t){const e=this.__maps;return function t(r,s=[]){for(let n in r){let o=r[n];if("string"==typeof o)s.push(e[o]());else if(Array.isArray(o))t(o,s);else{let[r,n]=Object.entries(o)[0],i=e[r]();i.include=[],s.push(i),t(n,i.include)}}return{include:s}}(t)}}class Handle{constructor(t,e={}){this.model=t,this.options=e,this._scopes=[],this._defaultScopes=[],this._data=null}scope(...t){return this.__clearScope(),t.forEach(t=>this._scopes.push(t)),this}__clearScope(){const t=this._scopes;return this._scopes=[],t}defaultScope(...t){return t.forEach(t=>this._defaultScopes.push(t)),this}rawScope(...t){return new Handle(this.model.scope(...t),this.options)}process(t,e){return"function"==typeof t&&([e,t]=[t,"get"]),async(r,s)=>{let n=getRequestData(t,r);try{n=this.__callHook("before",n,r,s),this._data=n;let t=await e.call(this,n,r,s);return this._data=null,t=this.__callHook("after",t,r,s),r.body=this.__callHook("data",t,r,s)}catch(t){return r.body=this.__callHook("data",t,r,s)}}}transaction(t,e){return this.process(t,async function(t,r,s){return await this.model.sequelize.transaction(n=>e.call(this,t,r,s,n))})}mock(t){const e=this.options.mock;if(!e)throw new Error("Handle.prototype.mock 方法依赖 mock 库，推荐使用 mockjs\n npm install mockjs --save\n 然后，在 Handle.options.mock = Mock 使用指定的 mock 库");return this.bulkCreate(e.mock(t).data,{})}toggle(...t){return this.process(async function(e){return await this.rawFindOne(...t)?this.rawDestroy(...t):this.rawCreate()})}async rawToggle(...t){return await this.rawFindOne(...t)?this.rawDestroy(...t):this.rawCreate()}__internal(t,e,r,s,n){return null==n&&([s,n]=[void 0,s]),async(o,i)=>{let a=getRequestData(t,o);try{a=this.__callHook("before",a,o,i);let t=getOp(n,a,o,i);t=mixinScope(a,t,this._defaultScopes,r),t=[s||a,t].slice(-this.model[e].length);let c=await this.model[e](...t);return c=this.__callHook("after",c,o,i),o.body=this.__callHook("data",c,o,i)}catch(t){return o.body=this.__callHook("data",t,o,i)}}}async __process(t,e,r,s){null==s&&([r,s]=[void 0,r]);let n=this._data,o=getOp(s,n);return o=[r||n,o=mixinScope(n,o,this._defaultScopes,e)].slice(-this.model[t].length),await this.model[t](...o)}__callHook(t,e,r,s){const n=this.options[t];return n&&"function"==typeof n?n(e,r,s):e}}for(let t in proxyNames){proxyNames[t].forEach(e=>{Handle.prototype[e]=function(...r){return this.__internal(t,e,this.__clearScope(),...r)},Handle.prototype["raw"+initialCap(e)]=function(...t){return this.__process(e,this.__clearScope(),...t)}})}Handle.Include=new Include;export default Handle;
